<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A Saturated Grey</title>
    <link>https://faizalpribadi.github.io/</link>
    <description>Recent content on A Saturated Grey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 03 Jun 2019 03:06:11 +0700</lastBuildDate>
    
	<atom:link href="https://faizalpribadi.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Resilient Http Request in Go</title>
      <link>https://faizalpribadi.github.io/blog/resilient-http-request-in-go/</link>
      <pubDate>Mon, 03 Jun 2019 03:06:11 +0700</pubDate>
      
      <guid>https://faizalpribadi.github.io/blog/resilient-http-request-in-go/</guid>
      <description>Resilience mechanism in distributed system reduce oversize request available for users.
in this part, we can make resilient using the circuit breaker pattern using a hystrix-golang library.
breakers.go
package breakers import ( &amp;quot;github.com/afex/hystrix-go/hystrix&amp;quot; ) const ( FetchJson = &amp;quot;fetch.json&amp;quot; ) func ConfigCircuitBreakers() { breakers := make(map[string]hystrix.CommandConfig) breakers[FetchJson] = hystrix.CommandConfig{ Timeout: 1000, MaxConcurrentRequests: 100, ErrorPercentThreshold: 25, } hystrix.Configure(breakers) }  main.go
package main import ( &amp;quot;github.com/afex/hystrix-go/hystrix&amp;quot; &amp;quot;github.com/faizalpribadi/learn/breakers&amp;quot; &amp;quot;io/ioutil&amp;quot; &amp;quot;log&amp;quot; &amp;quot;net/http&amp;quot; ) func main() { breakers.</description>
    </item>
    
    <item>
      <title>Simple Golang Library for Retry Mechanism</title>
      <link>https://faizalpribadi.github.io/blog/simple-golang-library-for-retry-mechanism/</link>
      <pubDate>Fri, 31 May 2019 00:51:56 +0700</pubDate>
      
      <guid>https://faizalpribadi.github.io/blog/simple-golang-library-for-retry-mechanism/</guid>
      <description> retry 
description Retry Execution Library For Go
installation go get -u github.com/faizalpribadi/retry
usage retry.Retry(5, 1, func() error { // do some logic here return nil })  test go test  </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://faizalpribadi.github.io/about/about/</link>
      <pubDate>Fri, 31 May 2019 00:14:52 +0700</pubDate>
      
      <guid>https://faizalpribadi.github.io/about/about/</guid>
      <description>Hi, i am a Software Engineer and Love Photography :)</description>
    </item>
    
    <item>
      <title>Say Hi</title>
      <link>https://faizalpribadi.github.io/blog/say-hi/</link>
      <pubDate>Thu, 30 May 2019 23:57:39 +0700</pubDate>
      
      <guid>https://faizalpribadi.github.io/blog/say-hi/</guid>
      <description>Ok, let&amp;rsquo;s try to say hi!</description>
    </item>
    
    <item>
      <title>Oops, you are offline.</title>
      <link>https://faizalpribadi.github.io/offline/</link>
      <pubDate>Sun, 16 Oct 2016 19:28:41 +0200</pubDate>
      
      <guid>https://faizalpribadi.github.io/offline/</guid>
      <description>You should try to find some internet connection to browse here.</description>
    </item>
    
    <item>
      <title>Page not found.</title>
      <link>https://faizalpribadi.github.io/404/</link>
      <pubDate>Sun, 16 Oct 2016 19:28:41 +0200</pubDate>
      
      <guid>https://faizalpribadi.github.io/404/</guid>
      <description>You should look somewhere else.</description>
    </item>
    
  </channel>
</rss>